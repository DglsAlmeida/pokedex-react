[{"C:\\Users\\rivand\\Desktop\\pokedex-react\\src\\styles\\global.js":"1","C:\\Users\\rivand\\Desktop\\pokedex-react\\src\\pages\\Dashboard\\index.js":"2","C:\\Users\\rivand\\Desktop\\pokedex-react\\src\\pages\\Dashboard\\styles.js":"3","C:\\Users\\rivand\\Desktop\\pokedex-react\\src\\services\\api.js":"4"},{"size":452,"mtime":1614826075618,"results":"5","hashOfConfig":"6"},{"size":3481,"mtime":1614826243627,"results":"7","hashOfConfig":"6"},{"size":2193,"mtime":1614826777001,"results":"8","hashOfConfig":"6"},{"size":121,"mtime":1614722355188,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3a0kyb",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rivand\\Desktop\\pokedex-react\\src\\styles\\global.js",[],"C:\\Users\\rivand\\Desktop\\pokedex-react\\src\\pages\\Dashboard\\index.js",["19","20"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FiLoader } from 'react-icons/fi';\nimport { BiX } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\nimport logoPokemon from '../../assets/logo.png';\nimport personagemPokemon from '../../assets/personagem.png';\nimport {\n  Container,\n  Form,\n  Error,\n  ContainerButtons,\n  Button,\n  PokemonsInformations,\n} from './styles';\nimport api from '../../services/api';\n\nconst Dashboard = () => {\n  const nameInputRef = useRef(null);\n  const [pokemons, setPokemons] = useState([]);\n  const [pokemonsTypes, setPokemonsTypes] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getPokemonsTypes() {\n      const { data } = await api.get('type');\n      const { results } = data;\n      setPokemonsTypes(results);\n    }\n    getPokemonsTypes();\n  }, []);\n\n  const handleSearchPokemon = useCallback(\n    async event => {\n      event.preventDefault();\n      setLoading(true);\n\n      const checkIfPokemonAlredyListed = pokemons.find(\n        pokemon => pokemon.name === nameInputRef.current?.value,\n      );\n\n      console.log(checkIfPokemonAlredyListed);\n\n      if (!checkIfPokemonAlredyListed) {\n        try {\n          setError(false);\n          const { data } = await api.get(\n            `pokemon/${nameInputRef.current?.value.toLowerCase()}`,\n          );\n          setPokemons([...pokemons, data]);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          setError(true);\n        }\n      } else {\n        setLoading(false);\n      }\n    },\n    [pokemons],\n  );\n\n  const SearchPokemonByType = useCallback(async typeName => {\n    console.log('ok');\n\n    // try {\n    //   setError(false);\n    //   const { data } = await api.get(`type/${typeName.toLowerCase()}`);\n    //   console.log(data);\n    //   const pokemonsFilteredByType = data.pokemon;\n    //   console.log(pokemonsFilteredByType);\n    //   // setPokemons(pokemonsFilteredByType);\n    // } catch (err) {\n    //   setError(true);\n    // }\n  }, []);\n\n  return (\n    <Container>\n      <img src={logoPokemon} alt=\"logo-pokemon\" />\n      <img src={personagemPokemon} alt=\"personagem\" />\n      <Form onSubmit={handleSearchPokemon}>\n        <input placeholder=\"Pesquise um PokÃ©mon\" ref={nameInputRef} />\n        <button type=\"submit\">\n          {loading ? <FiLoader size={32} /> : 'Pesquisar'}\n        </button>\n      </Form>\n\n      {error && (\n        <Error>\n          <span>This pokemon doesnt exist </span>\n        </Error>\n      )}\n\n      <ContainerButtons>\n        {pokemonsTypes.map(({ name }) => {\n          return (\n            <Button key={name} onClick={() => SearchPokemonByType(name)}>\n              {name}\n            </Button>\n          );\n        })}\n      </ContainerButtons>\n\n      <PokemonsInformations>\n        {pokemons.map(pokemon => (\n          <>\n            <a href=\"/\">\n              <img\n                src={pokemon.sprites.other['official-artwork'].front_default}\n                alt={pokemon.name}\n              />\n              <div>\n                <strong>{pokemon.name}</strong>\n                <p>{pokemon.types[0].type.name}</p>\n              </div>\n\n              {/* <button type=\"button\">\n                <BiX size={32} />\n              </button> */}\n            </a>\n          </>\n        ))}\n      </PokemonsInformations>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","C:\\Users\\rivand\\Desktop\\pokedex-react\\src\\pages\\Dashboard\\styles.js",[],"C:\\Users\\rivand\\Desktop\\pokedex-react\\src\\services\\api.js",[],{"ruleId":"21","severity":1,"message":"22","line":42,"column":7,"nodeType":"23","messageId":"24","endLine":42,"endColumn":18},{"ruleId":"21","severity":1,"message":"22","line":64,"column":5,"nodeType":"23","messageId":"24","endLine":64,"endColumn":16},"no-console","Unexpected console statement.","MemberExpression","unexpected"]